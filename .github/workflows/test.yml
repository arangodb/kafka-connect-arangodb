name: Test

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dbg/ci
    paths-ignore:
      - 'docker/**'
      - 'ChangeLog.md'
      - 'README.md'
      - '.github/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docker/**'
      - 'ChangeLog.md'
      - 'README.md'
      - '.github/**'

jobs:
  standalone:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    name: standalone [${{matrix.topology}}, ${{matrix.java-version}}]

    strategy:
      fail-fast: false
      matrix:
        arango-version:
          - 3.11.1
        topology:
          - single
        java-version:
          - 20

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'temurin'
          cache: maven
      - name: Create Network
        run: ./docker/create_network.sh
      - name: Start Kafka
        run: ./docker/start_kafka.sh
      - name: Start Schema Registry
        run: ./docker/start_schema_registry.sh
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          STARTER_MODE: ${{matrix.topology}}
          DOCKER_IMAGE: docker.io/arangodb/arangodb:${{matrix.arango-version}}
      - name: Integration Tests
        run: mvn integration-test

  cluster:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    name: cluster [${{matrix.topology}}, ${{matrix.java-version}}]
    env:
      KAFKA_CONNECT_HOST: "http://172.28.11.11:8083"
      ARANGO_ENDPOINTS: "172.28.0.1:8529,172.28.0.1:8539,172.28.0.1:8549"

    strategy:
      fail-fast: false
      matrix:
        arango-version:
          - 3.11.1
        topology:
          - cluster
        java-version:
          - 11
          - 17

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'temurin'
          cache: maven
      - name: Package
        run: mvn package
      - name: Create Network
        run: ./docker/create_network.sh
      - name: Start Kafka
        run: ./docker/start_kafka.sh
      - name: Start Schema Registry
        run: ./docker/start_schema_registry.sh
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          STARTER_MODE: ${{matrix.topology}}
          DOCKER_IMAGE: docker.io/arangodb/arangodb:${{matrix.arango-version}}
      - name: Start Kafka Connect
        run: ./docker/start_kafka_connect.sh
      - name: Integration Tests
        run: mvn integration-test -Dkafka.connect.host=${{env.KAFKA_CONNECT_HOST}} -Darango.endpoints=${{env.ARANGO_ENDPOINTS}}

  ssl:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    name: ssl
    env:
      KAFKA_CONNECT_HOST: "http://172.28.11.11:8083"
      ARANGO_VERSION: 3.11.1

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: maven
      - name: Package
        run: mvn package
      - name: Create Network
        run: ./docker/create_network.sh
      - name: Start Kafka
        run: ./docker/start_kafka.sh
      - name: Start Schema Registry
        run: ./docker/start_schema_registry.sh
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          SSL: true
          STARTER_MODE: cluster
          DOCKER_IMAGE: docker.io/arangodb/arangodb:${{env.ARANGO_VERSION}}
      - name: Start Kafka Connect
        run: ./docker/start_kafka_connect.sh
      - name: Integration Tests
        run: mvn integration-test -Dkafka.connect.host=${{env.KAFKA_CONNECT_HOST}} -Dit.test=com.arangodb.kafka.SslIT -DSslTest=true
