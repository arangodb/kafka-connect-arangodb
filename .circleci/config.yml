version: 2.1

parameters:
  docker-img:
    type: 'string'
    default: 'docker.io/arangodb/arangodb:latest'

commands:
  timeout:
    parameters:
      duration:
        default: '5m'
        type: 'string'
    steps:
      - run:
          name: Cancel job after <<parameters.duration>>
          background: true
          command: |
            sleep <<parameters.duration>>
            echo "Cancelling job as <<parameters.duration>> has elapsed"
            curl -X POST -H "Circle-Token: ${CIRCLE_TOKEN}" "https://circleci.com/api/v2/project/github/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/job/${CIRCLE_BUILD_NUM}/cancel"

executors:
  j8:
    docker:
      - image: 'cimg/openjdk:8.0'
  j11:
    docker:
      - image: 'cimg/openjdk:11.0'
  j17:
    docker:
      - image: 'cimg/openjdk:17.0'
  j21:
    docker:
      - image: 'cimg/openjdk:21.0'

jobs:
  test-standalone:
    parameters:
      jdk:
        type: 'string'
        default: 'j21'
      docker-img:
        type: 'string'
        default: <<pipeline.parameters.docker-img>>
      arango-endpoints:
        type: 'string'
        default: '172.28.0.1:8529'
    environment:
      DOCKER_IMAGE: <<parameters.docker-img>>
      ARANGO_ENDPOINTS: <<parameters.arango-endpoints>>
    executor: <<parameters.jdk>>
    steps:
      - timeout
      - checkout
      - setup_remote_docker
      - run:
          name: Create Kafka Environment
          command: ./docker/startup.sh
      - run:
          name: Integration Tests
          command: mvn -e --no-transfer-progress integration-test -Darango.endpoints=$ARANGO_ENDPOINTS
      - run:
          name: Create reports
          command: mvn -e --no-transfer-progress surefire-report:failsafe-report-only surefire-report:report-only
      - store_artifacts:
          path: target/site

  test-distributed:
    parameters:
      jdk:
        type: 'string'
        default: 'j11'
      topology:
        type: 'string'
        default: 'cluster'
      docker-img:
        type: 'string'
        default: <<pipeline.parameters.docker-img>>
      arango-endpoints:
        type: 'string'
        default: '172.28.0.1:8529,172.28.0.1:8539,172.28.0.1:8549'
      kafka-version:
        type: 'string'
        default: '3.6'
    environment:
      STARTER_MODE: <<parameters.topology>>
      DOCKER_IMAGE: <<parameters.docker-img>>
      ARANGO_ENDPOINTS: <<parameters.arango-endpoints>>
      KC: 'true'
      KAFKA_VERSION: <<parameters.kafka-version>>
    executor: <<parameters.jdk>>
    steps:
      - timeout
      - checkout
      - run:
          name: Package
          command: mvn package -Ddistributed
      - setup_remote_docker
      - run:
          name: Create Kafka Environment
          command: ./docker/startup.sh
      - run:
          name: Integration Tests
          command: mvn -e --no-transfer-progress integration-test -Ddistributed -Darango.endpoints=$ARANGO_ENDPOINTS
      - run:
          name: Create reports
          command: mvn -e --no-transfer-progress surefire-report:failsafe-report-only surefire-report:report-only
      - store_artifacts:
          path: target/site

  test-ssl:
    parameters:
      jdk:
        type: 'string'
        default: 'j17'
      topology:
        type: 'string'
        default: 'cluster'
      docker-img:
        type: 'string'
        default: <<pipeline.parameters.docker-img>>
      arango-endpoints:
        type: 'string'
        default: '172.28.0.1:8529,172.28.0.1:8539,172.28.0.1:8549'
    environment:
      STARTER_MODE: <<parameters.topology>>
      DOCKER_IMAGE: <<parameters.docker-img>>
      ARANGO_ENDPOINTS: <<parameters.arango-endpoints>>
      SSL: 'true'
      KC: 'true'
    executor: <<parameters.jdk>>
    steps:
      - timeout
      - checkout
      - run:
          name: Package
          command: mvn package -Ddistributed
      - setup_remote_docker
      - run:
          name: Create Kafka Environment
          command: ./docker/startup.sh
      - run:
          name: Integration Tests
          command: mvn -e --no-transfer-progress integration-test -Ddistributed -Darango.endpoints=$ARANGO_ENDPOINTS -DSslTest=true -Dit.test=com.arangodb.kafka.SslIT
      - run:
          name: Create reports
          command: mvn -e --no-transfer-progress surefire-report:failsafe-report-only surefire-report:report-only
      - store_artifacts:
          path: target/site

  test-resilience:
    parameters:
      jdk:
        type: 'string'
        default: 'j21'
      topology:
        type: 'string'
        default: 'cluster'
      docker-img:
        type: 'string'
        default: <<pipeline.parameters.docker-img>>
      arango-endpoints:
        type: 'string'
        default: '172.28.0.1:8529,172.28.0.1:8539,172.28.0.1:8549'
    environment:
      STARTER_MODE: <<parameters.topology>>
      DOCKER_IMAGE: <<parameters.docker-img>>
      ARANGO_ENDPOINTS: <<parameters.arango-endpoints>>
      TOXIPROXY_VERSION: v2.7.0
    executor: <<parameters.jdk>>
    steps:
      - timeout
      - checkout
      - setup_remote_docker
      - run:
          name: Create Kafka Environment
          command: ./docker/startup.sh
      - run:
          name: Start Toxiproxy
          command: ./bin/startProxy.sh
          background: true
      - run:
          name: Integration Tests
          command: mvn -e --no-transfer-progress integration-test -DresilienceTests -Darango.endpoints=$ARANGO_ENDPOINTS -Dit.test=com.arangodb.kafka.resilience.**
      - run:
          name: Create reports
          command: mvn -e --no-transfer-progress surefire-report:failsafe-report-only surefire-report:report-only
      - store_artifacts:
          path: target/site

workflows:

  test-standalone:
    jobs:
      - test-standalone:
          name: test-standalone

  test-distributed-jdk-versions:
    jobs:
      - test-distributed:
          name: test-distributed-<<matrix.jdk>>
          matrix:
            parameters:
              jdk:
                - j8
                - j11
                - j17
                - j21

  test-distributed-arangodb-versions:
    jobs:
      - test-distributed:
          name: test-distributed-<<matrix.docker-img>>
          matrix:
            parameters:
              jdk:
                - j17
              docker-img:
                - 'docker.io/arangodb/arangodb:3.12'
                - 'docker.io/arangodb/arangodb:3.11'

  test-ssl:
    jobs:
      - test-ssl:
          name: test-ssl

  test-kafka-versions:
    jobs:
      - test-distributed:
          name: test-distributed-<<matrix.kafka-version>>
          matrix:
            parameters:
              kafka-version:
                - '3.6'
                - '3.5'
                - '3.4'
                - '3.3'
                - '3.2'
                - '3.1'
                - '3.0'
                - '2.8'
                - '2.7.0'
                - '2.6.0'

  test-resilience:
    jobs:
      - test-resilience:
          name: test-resilience
